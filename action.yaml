name: "AccuKnox IaC Scanner"
description: "Run AccuKnox Infrastructure as Code (IaC) scan on the repository"
author: "Vickydew1"
branding:
  icon: "shield"
  color: "purple"

inputs:
  scan_image:
    description: "Docker image for AccuKnox scanner"
    required: false
    default: "public.ecr.aws/k9v9d5v2/accuknox-aspm-scanner:v0.13.4"
  file:
    description: "Specific file to scan (optional)"
    required: false
    default: ""
  directory:
    description: "Directory to scan (optional)"
    required: false
    default: "."
  compact:
    description: "Do not display code blocks in output"
    required: false
    default: true
  quiet:
    description: "Display only failed checks"
    required: false
    default: true
  soft_fail:
    description: "Do not return an error code if there are failed checks"
    required: false
    default: true
  framework:
    description: "Framework to scan (Terraform/Kubernetes)"
    required: false
    default: ""
  skip_framework:
    description: "Framework to skip"
    required: false
    default: ""
  token:
    description: "AccuKnox authentication token"
    required: true
  tenant_id:
    description: "AccuKnox tenant ID (optional, only required for certain scans)"
    required: false
    default: ""
  endpoint:
    description: "CSPM panel URL"
    required: false
    default: "cspm.demo.accuknox.com"
  label:
    description: "Label for AccuKnox scan results"
    required: true

runs:
  using: "composite"
  steps:
    - name: Run AccuKnox IaC Scanner
      shell: bash
      run: |
        # Build scanner command arguments
        CMD_ARGS=""

        [ -n "${{ inputs.file }}" ] && CMD_ARGS="$CMD_ARGS --file ${{ inputs.file }}"
        [ -n "${{ inputs.directory }}" ] && CMD_ARGS="$CMD_ARGS --directory ${{ inputs.directory }}"
        [ "${{ inputs.compact }}" == "true" ] && CMD_ARGS="$CMD_ARGS --compact"
        [ "${{ inputs.quiet }}" == "true" ] && CMD_ARGS="$CMD_ARGS --quiet"
        [ -n "${{ inputs.framework }}" ] && CMD_ARGS="$CMD_ARGS --framework ${{ inputs.framework }}"
        [ -n "${{ inputs.skip_framework }}" ] && CMD_ARGS="$CMD_ARGS --skip-framework ${{ inputs.skip_framework }}"

        SOFTFAIL_ARG=""
        [ "${{ inputs.soft_fail }}" == "true" ] && SOFTFAIL_ARG="--softfail"

        # Auto-detect repository info
        REPO_URL="${GITHUB_SERVER_URL}/${GITHUB_REPOSITORY}.git"
        REPO_BRANCH="${GITHUB_REF_NAME}"

        # Prepare environment variables
        ENV_VARS="-e ACCUKNOX_TOKEN='${{ inputs.token }}' \
                  -e ACCUKNOX_ENDPOINT='${{ inputs.endpoint }}' \
                  -e ACCUKNOX_LABEL='${{ inputs.label }}'"

        # Include tenant_id only if provided
        if [ -n "${{ inputs.tenant_id }}" ]; then
          ENV_VARS="$ENV_VARS -e ACCUKNOX_TENANT='${{ inputs.tenant_id }}'"
        fi

        echo "Running AccuKnox IaC scan on repo $REPO_URL branch $REPO_BRANCH"

        # Run the scanner Docker container
        docker run --rm $ENV_VARS -v "${GITHUB_WORKSPACE}:/workspace" ${{ inputs.scan_image }} \
          scan $SOFTFAIL_ARG iac \
            --command "$CMD_ARGS" \
            --container-mode \
            --repo-url "$REPO_URL" \
            --repo-branch "$REPO_BRANCH"
      continue-on-error: true
