name: "AccuKnox IaC Scanner"
description: "Run AccuKnox Infrastructure as Code (IaC) scan on the repository"
author: "Vickydew1"
branding:
  icon: "shield"
  color: "purple"

inputs:
  file:
    description: 'Specify a file for scanning; cannot be used with directory input. Filter runners by file type, e.g., ".tf" for Terraform.'
    required: false
    default: ""
  directory:
    description: 'Directory with infrastructure code and/or package manager files to scan'
    required: false
    default: "."
  compact:
    description: "Do not display code blocks in output"
    required: false
    default: true
  quiet:
    description: "Display only failed checks"
    required: false
    default: true
  soft_fail:
    description: "Do not return an error code if there are failed checks"
    required: false
    default: true
  framework:
    description: "Run only on a specific infrastructure, Supported: Kubernetes & Terraform"
    required: false
    default: ""
  endpoint:
    description: "CSPM panel URL"
    required: false
    default: "cspm.demo.accuknox.com"
  label:
    description: "Label for AccuKnox scan results"
    required: true

runs:
  using: "composite"
  steps:
    - name: Run AccuKnox IaC Scanner
      shell: bash
      run: |
        echo "Downloading AccuKnox ASPM Scanner v0.13.4..."
        curl -L https://github.com/accuknox/aspm-scanner-cli/releases/download/v0.13.4/accuknox-aspm-scanner -o accuknox-aspm-scanner
        chmod +x accuknox-aspm-scanner

        # Prepare soft-fail argument
        SOFT_FAIL="${{ inputs.soft_fail }}"
        SOFT_FAIL_ARG=""
        if [ "$SOFT_FAIL" = "true" ] || [ "$SOFT_FAIL" = "1" ]; then
          SOFT_FAIL_ARG="--softfail"
        fi

        # Build CLI command arguments
        CMD_ARGS=""
        [ -n "${{ inputs.file }}" ] && CMD_ARGS="$CMD_ARGS --file ${{ inputs.file }}"
        [ -n "${{ inputs.directory }}" ] && CMD_ARGS="$CMD_ARGS --directory ${{ inputs.directory }}"
        [ "${{ inputs.compact }}" = "true" ] && CMD_ARGS="$CMD_ARGS --compact"
        [ "${{ inputs.quiet }}" = "true" ] && CMD_ARGS="$CMD_ARGS --quiet"
        [ -n "${{ inputs.framework }}" ] && CMD_ARGS="$CMD_ARGS --framework ${{ inputs.framework }}"

        # Detect repo URL and branch automatically
        REPO_URL="--repo-url ${GITHUB_SERVER_URL}/${GITHUB_REPOSITORY}.git"
        REPO_BRANCH="--repo-branch ${GITHUB_REF_NAME}"

        # Export only required environment variables
        export ACCUKNOX_ENDPOINT="${{ inputs.endpoint }}"
        export ACCUKNOX_LABEL="${{ inputs.label }}"

        echo "./accuknox-aspm-scanner scan $SOFT_FAIL_ARG iac --command \"$CMD_ARGS\" --container-mode $REPO_URL $REPO_BRANCH"
        ./accuknox-aspm-scanner scan $SOFT_FAIL_ARG iac --command "$CMD_ARGS" --container-mode $REPO_URL $REPO_BRANCH
      continue-on-error: true
